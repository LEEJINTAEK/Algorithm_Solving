function solution(n) {
  let cnt = 0;
  const queens = [];
  function possible(x, y) {
    for (const [a, b] of queens) {
      if (a === x || b === y) {
        return false;
      }
      if (Math.abs(a - x) === Math.abs(b - y)) {
        return false;
      }
    }
    return true;
  }
  function dfs(row) {
    if (n === row) {
      cnt += 1;
    }
    for (let i = 0; i < n; i++) {
      if (!possible(row, i)) {
        continue;
      }

      queens.push([row, i]);
      dfs(row + 1);
      queens.pop();
    }
  }

  dfs(0);
  return cnt;
}
